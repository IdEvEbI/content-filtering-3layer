name: CI

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-ci-${{ hashFiles('**/requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-ci-
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt
      - name: Lint
        run: flake8
      - name: Unit Tests
        run: pytest -m "not integration" -q

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-dev-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-dev-
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Setup test database
        run: |
          # 等待 MySQL 服务启动
          sleep 10
          # 创建测试表结构
          mysql -h 127.0.0.1 -P 3306 -u root -ptest testdb << EOF
          CREATE TABLE IF NOT EXISTS dzx_forum_post (
            pid INT PRIMARY KEY,
            author VARCHAR(255),
            authorid INT,
            subject TEXT,
            message TEXT,
            useip VARCHAR(45)
          );
          EOF
      - name: Integration Tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: test
          DB_NAME: testdb
          DB_CHARSET: utf8mb4
        run: pytest -m integration -q
